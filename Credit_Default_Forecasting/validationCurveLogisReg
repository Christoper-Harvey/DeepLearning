function [lambda_vec, error_train, error_val, best_lambda] = ...
    validationCurveLogisReg(X, y, Xval, yval)

% Selected values of lambda (you should not change this)
lambda_vec = [0 0.001 0.003 0.01 0.03 0.1 0.3 1 3 10 30 90 180 ]';

% You need to return these variables correctly.
error_train = zeros(length(lambda_vec), 1);
error_val = zeros(length(lambda_vec), 1);

options = optimset('GradObj', 'on', 'MaxIter', 400);

       for i = 1:length(lambda_vec),
       initial_theta = zeros(columns(X), 1);

           lambda = lambda_vec(i);
           %the training/validation error does not include the regularization term,
           %hence, why the lambda parameter is = 0
           [theta, J, exit_flag] = fminunc(@(t)(lrCostFunction(t, X(1:i, :), y(1:i), lambda)), initial_theta, options);
           error_train(i) = lrCostFunction(theta, X(1:i, :), y(1:i), 0);
           error_val(i) = lrCostFunction(theta, Xval(1:i, :), yval(1:i), 0);
       end

[waste, best_lambda_index] = min(error_val);
best_lambda = lambda_vec(best_lambda_index);
printf("the best lambda = %f\n", best_lambda);

end
